/*! obs-model 0.5.0 Copyright (c) 2013 Alan Plum. MIT licensed. @preserve */
var aug=require("aug"),obs=require("obs"),noop=function(){};function model(t,i){function r(t){t=t||{};this._destructors=[];var i={};var r={};var s,o,e;for(s in this.model.attrs){o=this.model.attrs[s]||{};if(o.write||o.read){this[s]=obs.computed({lazy:o.lazy,write:o.write,read:o.read?noop:o.read,context:this});if(o.read){i[s]=o.read}if(o.watch){r[s]=[].concat(o.watch)}}else if(t.hasOwnProperty(s)){this[s]=obs.prop(t[s])}else{this[s]=obs.prop()}}for(s in i){this[s].read=i[s]}for(s in r){for(e=0;e<r[s].length;e++){this[s].watch(this[r[s][e]])}}this._destructors.push(function(){for(var t in r){for(var i=0;i<r[t].length;i++){this[t].unwatch(this[r[t][i]])}}});for(e=0;e<this.model.plugins.length;e++){this.model.plugins[e](this)}}r.prototype={model:r,dismiss:function(){for(var t=0;t<this._destructors.length;t++){this._destructors[t].call(this)}}};aug(r,{modelName:t,attrs:i||{},plugins:[],attr:function(t,i){this.attrs[t]=i;return this},use:function(t){for(var i=0;i<this.plugins.length;i++){if(this.plugins[i]===t){return this}}if(typeof t.contributeToModel==="function"){t.contributeToModel(this)}this.plugins.push(t);return this}});return r}module.exports=model;